""
"" This vimrc defines utility functions to be used from within yim.
""


function YimUI_ShowKeyMapping(...)
  let input_flag=get(a:, 1, '')
  
  let flags = [input_flag]
  if input_flag == ''
    let flags=['file', 'tab']
  endif

  if len(flags) > 1
    echom ' '
    echom 'General key mapping:'
    echom '  [imap] <j> + <j> : mapping to <esc> key'
    echom ' '
    echom 'Key mapping instruction shortcuts:'
    echom '  [nmap] <k> + <k> : show key mapping of each category and helper shortcuts'
    echom '  [nmap] <k> + <f> : show file related key mapping'
    echom '  [nmap] <k> + <t> : show tab related key mapping'
  endif

  for flag in flags
    if flag == 'file'
      echom ' '
      echom 'File releated key mapping:'
      echom '  [nmap] <space> + <w> : write text to current file or to specified file path'
    elseif flag == 'tab'
      echom ' '
      echom 'Tab related key mapping:'
      echom '  [nmap] <space> + <t>           : create new tab'
      echom '  [nmap] <space> + <c>           : close current tab'
      echom '  [nmap] <shift> + <right arrow> : move to next tab'
      echom '  [nmap] <shift> + <left arrow>  : move to previous tab'
    endif
  endfor

  execute 'echo ""'
endfunctio


function YimText_RemoveTrailSpaces()
  let cur_pos=getpos(".")
  execute '%s/\s\+$//e'
  call cursor(cur_pos[1], cur_pos[2])
endfunction


function YimBuffer_SetStatusLine()
  let comps={
  \  'file': '%f\ %r%m', 
  \  'cursor': 'line\ %l,\ column\ %c,\ %p%%\ of\ the\ text'
  \}
  let settings=comps['file'] . '%=' . comps['cursor']
  execute 'set statusline=' . settings
endfunction


function YimGit_ShowInfo()
  let commands=[
  \  'clear',
  \  'echo [Origin Url]',
  \  'git config --get remote.origin.url',
  \  'echo',
  \  'echo [Git Status]',
  \  'git status'
  \]
  execute '!' . join(commands, ';')
endfunction

